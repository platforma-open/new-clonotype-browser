pt := import("@platforma-sdk/workflow-tengo:pt")
wf := import("@platforma-sdk/workflow-tengo:workflow")
assets := import("@platforma-sdk/workflow-tengo:assets")
render := import("@platforma-sdk/workflow-tengo:render")
pFrames := import("@platforma-sdk/workflow-tengo:pframes")

util := import(":util")
annotations := import(":annotations")

wf.setPreRun(assets.importTemplate(":prerun"))

wf.prepare(func(args) {
	return { columnBundle: util.createColumnBundle(args) }
})
wf.body(func(args) {
	outputs := {}
	exports := {}

	annotationSpec := args.annotationSpec
	annotationAxesSpec := util.getAnnotationAxesSpec(args)

	if !is_undefined(annotationAxesSpec) && len(annotationSpec.steps) > 0 {
		computedAnnotations := annotations.computeClonotypeAnnotations({
			title: annotationSpec.title,
			steps: annotationSpec.steps,
			inputAnchor: args.inputAnchor,
			annotationAxesSpec: annotationAxesSpec,
			shouldComputeFilters: true
		})

		exports["annotationPf"] = computedAnnotations.annotationPf
		exports["filtersPf"] = computedAnnotations.filtersPf
	}

	return {
		outputs: outputs,
		exports: exports
	}
})
